= SixArm.com » Ruby » PersonName gem accesses a person's name from ActiveRecord fields

Author:: Joel Parker Henderson, joel@joelparkerhenderson.com
Copyright:: Copyright (c) 2006-2011 Joel Parker Henderson
License:: See LICENSE.txt file

Our user models typically have accessors like these:
* first_name => "Martin"
* middle_name => "Luther"
* last_name => "King"

This gem is a utility to concatenate the user's name various common ways:
* full_name => "Martin Luther King"
* list_name => "King, Martin Luther"
* initials => "MLK"
* etc.

It's fine if the model doesn't have a middle_name field, or if any of the values of any of the fields are nil or blank; this gem will do the right thing.

==Example

  class User < ActiveRecord::Base
    include PersonName
  end
  
  user=User.new(
    first_name => 'Martin',
    middle_name => 'Luther',
    last_name => 'King'
  )
  
  user.full_name => "Martin Luther King"
  user.list_name => "King, Martin Luther"
  user.initials => "MLK"
  user.first_name_middle_name => "Martin Luther"
  user.first_name_middle_initial => "Martin L"
  user.first_name_middle_initial_last_name => "Martin L King"

==Performance Tip

To make these very fast in Rails, you can use memoize:

  class User < ActiveRecord::Base
    extend ActiveSupport::Memoizable
    include PersonName
    memoize :full_name,
            :list_name,
	    :initials,
            :first_name_middle_name,
            :first_name_middle_initial,
            :first_name_middle_initial_last_name,
            :first_name_last_name
  end


